<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:metadata="clr-namespace:EventIAConstructor.EventAI.Metadata"
                    xmlns:controls="clr-namespace:EventIAConstructor.Common.Controls"
                    xmlns:local="clr-namespace:EventIAConstructor"
                    xmlns:dialogs="clr-namespace:EventIAConstructor.Common.Dialogs"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <DataTemplate x:Key="ActionType.NONE">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
            </TextBlock>
            <Separator  />
            <TextBlock Text="No params!" HorizontalAlignment="Center" Foreground="#FFFF0000" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.TEXT">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Displays the specified -TextId. When -TextId2 and -TextId3 are specified, the selection will be Randomized between 1,2 or 3. Text ID's are defined, along with other options for the text, in creature_ai_texts table. Below is detailed Text Information. All text ID values for EventAI MUST be negative.
            </TextBlock>
            <Separator />
            <TextBlock Text="TextId 1" />
            <TextBox   Text="{Binding Param1}" ToolTip="The entry of the text that the NPC should use from eventai_texts table. Optionally a entry from other tables can be used (such as custom_texts)." />

            <TextBlock Text="TextId 2" />
            <TextBox   Text="{Binding Param2}" ToolTip="Optional. TextId can be defined in addition. The same apply to this as explained above, however eventAI will randomize between the two." />

            <TextBlock Text="TextId 3" />
            <TextBox   Text="{Binding Param3}" ToolTip="Optional, if Parameter 2 exist. In this case, eventAI will randomize between three." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.SET_FACTION">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Changes faction for a creature. When param1 is zero, creature will revert to it's default faction. Flags will determine when faction is restored to default (evade, respawn etc)
            </TextBlock>
            <Separator />
            <TextBlock Text="Faction Id" />
            <TextBox   Text="{Binding Param1}" ToolTip="FactionId from Faction.dbc OR 0. Changes faction for creature. If 0, creature will revert to it's default faction if previously changed." />

            <TextBlock Text="Flags" />
            <controls:ComboBoxFlags  FlagsSource="{x:Type metadata:TemporaryFaction}" SelectedFlag="{Binding Param2}" ToolTip="When Parameter 1 is not 0, flags can be used to restore default faction at certain events." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.MORPH_TO_ENTRY_OR_MODEL">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Sets either model from creature_template.entry (Param1) OR explicit modelId (Param2) for the NPC. If (Param1) AND (Param2) are both 0, NPC will demorph and revert to the default model (as specified in creature_template).
            </TextBlock>
            <Separator />
            <TextBlock Text="Creature entry" />
            <TextBox   Text="{Binding Param1}" ToolTip="Creature entry from creature_template. Action will then change to the model this creature are using." />

            <TextBlock Text="Model Id" />
            <TextBox   Text="{Binding Param2}" ToolTip="If parameter 1 is 0, then this modelId will be used (in case parameter 1 exist, parameter 2 will not be used)" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.SOUND">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                NPC Plays a specified Sound ID.
            </TextBlock>
            <Separator />
            <TextBlock Text="SoundId" />
            <TextBox   Text="{Binding Param1}" ToolTip="The Sound ID to be played. (Sound IDs are contained in the DBC files.)" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.EMOTE">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                NPC Does a specified Emote ID.
            </TextBlock>
            <Separator />
            <TextBlock Text="EmoteId" />
            <TextBox   Text="{Binding Param1}" ToolTip="The Emote ID that the creature should perform. (Emote IDs are also contained in the DBC but they can be found in the mangos source as well)." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.RANDOM_SOUND">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                NPC Plays a Random Sound ID (Random Selects Param1, Param2 or Param3) *
            </TextBlock>
            <Separator />
            <TextBlock Text="SoundId 1" />
            <TextBox   Text="{Binding Param1}" ToolTip="The Sound ID to be played as Random Choice #1." />

            <TextBlock Text="SoundId 2" />
            <TextBox   Text="{Binding Param2}" ToolTip="The Sound ID to be played as Random Choice #2." />

            <TextBlock Text="SoundId 3" />
            <TextBox   Text="{Binding Param3}" ToolTip="The Sound ID to be played as Random Choice #3." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.RANDOM_EMOTE">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                NPC Emotes a Random Emote ID (Random Selects Param1, Param2 or Param3) *
            </TextBlock>
            <Separator />
            <TextBlock Text="EmoteId 1" />
            <TextBox   Text="{Binding Param1}" ToolTip="The Emote ID to be played as Random Choice #1." />

            <TextBlock Text="EmoteId 2" />
            <TextBox   Text="{Binding Param2}" ToolTip="The Emote ID to be played as Random Choice #2." />

            <TextBlock Text="EmoteId 3" />
            <TextBox   Text="{Binding Param3}" ToolTip="The Emote ID to be played as Random Choice #3." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.CAST">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Casts spell (Param1) on a target (Param2) using cast flags (Param3) --> Specified Below
            </TextBlock>
            <Separator />
            <TextBlock Text="Spell Id" />
            <controls:TextBoxButton Value="{Binding Param1}" DialogType="{x:Type dialogs:SpellDialog}"  ToolTip="The Spell ID to use for the NPC to cast. The value used in this field needs to be a valid Spell ID." />

            <TextBlock Text="Target" />
            <controls:EnumComboBox EnumSource="{x:Type metadata:TargetType}"  SelectedEnumValue="{Binding Param2}"  ToolTip="The Target Type defining who the creature should cast the spell at. The value in this field needs to be a valid Target Type as specified in the reference tables below." />

            <TextBlock Text="CastFlags" />
            <controls:ComboBoxFlags FlagsSource="{x:Type metadata:CastFlags}" SelectedFlag="{Binding Param3}" ToolTip="See Table Below for Cast Flag Bitmask Values. If you are unsure what to set this value at leave it at 0." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.SUMMON_DURATION">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Summons a Creature ID (Param1) for (Param3) duration after Evade (In MS) and orders it to attack (Param2) target (specified below). Spawns on top of NPC who summons it.
            </TextBlock>
            <Separator />
            <TextBlock Text="CreatureID Id" />
            <controls:TextBoxButton Value="{Binding Param1}" DialogType="{x:Type dialogs:CreatureDialog}"  ToolTip="The Creature Template ID to be Summoned. The value here needs to be a valid Creature Template ID." />

            <TextBlock Text="Target" />
            <controls:EnumComboBox EnumSource="{x:Type metadata:TargetType}"  SelectedEnumValue="{Binding Param2}"  ToolTip="The Target Type defining who the Summoned creature will attack once spawned. The value in this field needs to be a valid Target Type as specified in the reference tables below." />

            <TextBlock Text="Duration" />
            <TextBox   Text="{Binding Param3}" ToolTip="The duration until the summoned creature should be unsummoned AFTER Combat ends. The value in this field is in milliseconds or 0." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.THREAT_SINGLE_PCT">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Modifies a threat by (Param1) percent on a target (Param2).
            </TextBlock>
            <Separator />
            <TextBlock Text="Threat (%)" />
            <TextBox   Text="{Binding Param1}"  ToolTip="Threat percent that should be modified. The value in this field can range from -100 to +100. If it is negative, threat will be taken away and if positive, threat will be added." />

            <TextBlock Text="Target" />
            <controls:EnumComboBox EnumSource="{x:Type metadata:TargetType}"  SelectedEnumValue="{Binding Param2}" ToolTip="The Target Type defining on whom the threat change should occur. The value in this field needs to be a valid target type as specified in the reference tables below." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.THREAT_ALL_PCT">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Modifies a threat by (Param1) on all targets in the threat list (using -100% here will result in full aggro dump).
            </TextBlock>
            <Separator />
            <TextBlock Text="Threat (%)" />
            <TextBox   Text="{Binding Param1}"  ToolTip="The percent that should be used in modifying everyone's threat in the creature's threat list. The value here can range from -100 to +100." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.QUEST_EVENT">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Calls AreaExploredOrEventHappens with (Param1) for a target in (Param2).
            </TextBlock>
            <Separator />
            <TextBlock Text="QuestID" />
            <controls:TextBoxButton Value="{Binding Param1}" DialogType="{x:Type dialogs:QuestDialog}"  ToolTip="The Quest Template ID. The value here must be a valid quest template ID. Furthermore, the quest should have SpecialFlags | 2 as it would need to be completed by an external event which is the activation of this action." />

            <TextBlock Text="Target" />
            <controls:EnumComboBox EnumSource="{x:Type metadata:TargetType}"  SelectedEnumValue="{Binding Param2}" ToolTip="The Target Type defining whom the quest should be completed for. The value in this field needs to be a valid target type as specified in the reference tables below." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.QUEST_CASTCREATUREGO">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Sends CastCreatureOrGo for a creature specified by CreatureId (Param1) with provided spell id (Param2) for a target in (Param3).
            </TextBlock>
            <Separator />
            <TextBlock Text="CreatureID" />
            <controls:TextBoxButton Value="{Binding Param1}" DialogType="{x:Type dialogs:CreatureDialog}"  ToolTip="The Creature Template ID to be Summoned. The value here needs to be a valid Creature Template ID." />

            <TextBlock Text="SpellId" />
            <controls:TextBoxButton Value="{Binding Param2}" DialogType="{x:Type dialogs:SpellDialog}" ToolTip="The Spell ID to use to simulate the cast. The value used in this field needs to be a valid Spell ID." />

            <TextBlock Text="Target" />
            <controls:EnumComboBox EnumSource="{x:Type metadata:TargetType}"  SelectedEnumValue="{Binding Param3}" ToolTip="The Target Type defining whom the quest credit should be given to. The value in this field needs to be a valid target type as specified in the reference tables below." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.SET_UNIT_FIELD">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Sets a unit field (Param1) to provided value (Param2) on a target in (Param3).
            </TextBlock>
            <Separator />
            <TextBlock Text="Field number" />
            <controls:EnumComboBox SelectedEnumValue="{Binding Param1}" EnumSource="{x:Type metadata:UnitFields}" ToolTip="The index of the Field Number to be changed. Use (http://wiki.udbforums.org/index.php/Character_data) for a list of indeces and what they control. Creatures only contain the OBJECT_FIELD_* and UNIT_FIELD_* fields. They do not contain the PLAYER_FIELD_* fields."/>
            
            <TextBlock Text="Value" />
            <TextBox   Text="{Binding Param2}" ToolTip="The new value to be put in the field." />

            <TextBlock Text="Target" />
            <controls:EnumComboBox EnumSource="{x:Type metadata:TargetType}"  SelectedEnumValue="{Binding Param3}" ToolTip="The Target Type defining for whom the unit field should be changed. The value in this field needs to be a valid target type as specified in the reference tables below." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.SET_UNIT_FLAG">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Sets flag (flags can be used together to modify multiple flags at once) on a target (Param2).
            </TextBlock>
            <Separator />
            <TextBlock Text="Flags" />
            <controls:ComboBoxFlags SelectedFlag="{Binding Param1}" FlagsSource="{x:Type metadata:UnitFlags}" ToolTip="The flag(s) to be set. Multiple flags can be set by using bitwise-OR on them (adding them together)." />

            <TextBlock Text="Target" />
            <controls:EnumComboBox EnumSource="{x:Type metadata:TargetType}"  SelectedEnumValue="{Binding Param2}"  ToolTip="The Target Type defining for whom the flags should be changed. The value in this field needs to be a valid Target Type as specified in the reference tables below." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.REMOVE_UNIT_FLAG">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Removes flag on a target (Param2).
            </TextBlock>
            <Separator />
            <TextBlock Text="Flags" />
            <controls:ComboBoxFlags SelectedFlag="{Binding Param1}" FlagsSource="{x:Type metadata:UnitFlags}" ToolTip="The flag(s) to be removed. Multiple flags can be set by using bitwise-OR on them (adding them together)." />

            <TextBlock Text="Target" />
            <controls:EnumComboBox EnumSource="{x:Type metadata:TargetType}"  SelectedEnumValue="{Binding Param2}"   ToolTip="The target type defining for whom the flags should be changed. The value in this field needs to be a valid Target Type as specified in the reference tables below." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.AUTO_ATTACK">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Stop melee attack when (Param1) is zero, otherwise continue attacking / allow melee attack.
            </TextBlock>
            <Separator />
            <TextBlock Text="Allow auto attack" />
            <TextBox   Text="{Binding Param1}"  ToolTip="If zero, then the creature will stop its melee attacks. If non-zero, then the creature will either continue its melee attacks (the action would then have no effect) or it will start its melee attacks on the target with the top threat if its melee attacks were previously stopped." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.COMBAT_MOVEMENT">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Stop combat based movement when (Param1) is zero, otherwise continue/allow combat based movement (targeted movement generator).
            </TextBlock>
            <Separator />
            <TextBlock Text="Allow combat movement" />
            <TextBox   Text="{Binding Param1}"  ToolTip="If zero, then the creature will stop moving towards its victim (if its victim gets out of melee range) and will be stationary. If non-zero, then the creature will either continue to follow its victim (the action would have no effect) or it will start to follow the target with the top threat if its movement was disabled before." />

            <TextBlock Text="param 2" />
            <TextBox Text="{Binding Param2}" ToolTip="If non-zero, then stop melee combat state (if param1=0) or start melee combat state (if param1!=0) and creature in combat with selected target." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.SET_PHASE">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Sets the current phase to (Param1).
            </TextBlock>
            <Separator />
            <TextBlock Text="Phase" />
            <TextBox   Text="{Binding Param1}"  ToolTip="The new phase to set the creature in. This number must be an integer between 0 and 31. Numbers outside of that range will result in an error." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.INC_PHASE">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Increments the phase by (Param1). May be negative to decrement, but should not be zero.
            </TextBlock>
            <Separator />
            <TextBlock Text="Value" />
            <TextBox   Text="{Binding Param1}"  ToolTip="The number of phases to increase or decrease. Use negative values to decrease the current phase." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.EVADE">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Forces the creature to evade, wiping all threat and dropping combat.
            </TextBlock>
            <Separator />
            <TextBlock Text="No params!" HorizontalAlignment="Center" Foreground="#FFFF0000" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.FLEE_FOR_ASSIST">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Causes the creature to flee for assistence (often at low health).
            </TextBlock>
            <Separator />
            <TextBlock Text="No params!" HorizontalAlignment="Center" Foreground="#FFFF0000" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.QUEST_EVENT_ALL">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Calls GroupEventHappens with (Param1). Only used if it's _expected_ event should call quest completion for all players in a current party.
            </TextBlock>
            <Separator />
            <TextBlock Text="QuestId" />
            <controls:TextBoxButton Value="{Binding Param1}" DialogType="{x:Type dialogs:QuestDialog}"   ToolTip="The quest ID to finish for everyone." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.CASTCREATUREGO_ALL">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Calls CastedCreatureOrGo for all players on the threat list with quest id specified in (Param1) and spell id in (Param2).
            </TextBlock>
            <Separator />
            <TextBlock Text="QuestId" />
            <controls:TextBoxButton Value="{Binding Param1}" DialogType="{x:Type dialogs:QuestDialog}"   ToolTip="The quest template ID." />

            <TextBlock Text="SpellId" />
            <controls:TextBoxButton Value="{Binding Param2}" DialogType="{x:Type dialogs:SpellDialog}"   ToolTip="The spell ID used to simulate the cast." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.REMOVEAURASFROMSPELL">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Removes all auras on a target (Param1) caused by a spell (Param2).
            </TextBlock>
            <Separator />
            <TextBlock Text="Target" />
            <controls:EnumComboBox EnumSource="{x:Type metadata:TargetType}"  SelectedEnumValue="{Binding Param1}"   ToolTip="The target type defining for whom the unit field should be changed. The value in this field needs to be a valid target type as specified in the reference tables below." />

            <TextBlock Text="Spellid" />
            <controls:TextBoxButton Value="{Binding Param2}" DialogType="{x:Type dialogs:SpellDialog}"   ToolTip="The spell ID whose auras will be removed." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.RANGED_MOVEMENT">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Changes the movement generator to a ranged type. (note: default melee type can still be set by using 0 as angle and 0 as distance).
            </TextBlock>
            <Separator />
            <TextBlock Text="Distance" />
            <TextBox   Text="{Binding Param1}"   ToolTip="Distance - The distance the mob should keep between it and its target." />

            <TextBlock Text="Angle" />
            <TextBox   Text="{Binding Param2}"   ToolTip="The angle the mob should use." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.RANDOM_PHASE">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Sets a phase to a specified id(s)*
            </TextBlock>
            <Separator />
            <TextBlock Text="PhaseId 1" />
            <TextBox   Text="{Binding Param1}"  ToolTip="A possible random phase choice." />

            <TextBlock Text="PhaseId 2" />
            <TextBox   Text="{Binding Param2}"   ToolTip="A possible random phase choice." />

            <TextBlock Text="PhaseId 3" />
            <TextBox   Text="{Binding Param3}"  ToolTip="A possible random phase choice." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.RANDOM_PHASE_RANGE">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Sets a phase to a random id (Phase = PhaseMin + rnd % PhaseMin-PhaseMax). PhaseMax must be greater than PhaseMin.
            </TextBlock>
            <Separator />
            <TextBlock Text="PhaseMin" />
            <TextBox   Text="{Binding Param1}"  ToolTip="The minimum of the phase range." />

            <TextBlock Text="PhaseMax" />
            <TextBox   Text="{Binding Param2}"  ToolTip="The maximum of the phase range. The number here must be greater than PhaseMin." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.SUMMON">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Summons a creature (Param1) to attack target (Param2) at location specified by EventAI_Summons (Param3).
            </TextBlock>
            <Separator />
            <TextBlock Text="CreatureID" />
            <TextBox   Text="{Binding Param1}"  ToolTip="The creature template ID to be summoned. The value here needs to be a valid creature template ID." />

            <TextBlock Text="Target" />
            <controls:EnumComboBox EnumSource="{x:Type metadata:TargetType}"  SelectedEnumValue="{Binding Param2}" ToolTip="The target type defining who the summoned creature will attack. The value in this field needs to be a valid target type as specified in the reference tables below. NOTE: Using target type 0 will cause the summoned creature to not attack anyone." />

            <TextBlock Text="SummonID" />
            <TextBox   Text="{Binding Param3}"  ToolTip="The summon ID from the creature_ai_summons table controlling the position (and spawntime) where the summoned mob should be spawned at." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.KILLED_MONSTER">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Calls KilledMonster (Param1) for a target (Param2).
            </TextBlock>
            <Separator />
            <TextBlock Text="CreatureID" />
            <TextBox   Text="{Binding Param1}"  ToolTip="The creature template ID. The value here must be a valid creature template ID." />

            <TextBlock Text="Target" />
            <controls:EnumComboBox EnumSource="{x:Type metadata:TargetType}"  SelectedEnumValue="{Binding Param2}"  ToolTip="The target type defining whom the quest kill count should be given to. The value in this field needs to be a valid target type as specified in the reference tables below." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.SET_INST_DATA">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Calls ScriptedInstance::SetData with field (Param1) and data (Param2).
            </TextBlock>
            <Separator />
            <TextBlock Text="Field" />
            <TextBox   Text="{Binding Param1}"  ToolTip="The field to change in the instance script. Again, this field needs to be a valid field that has been already defined in the instance's script." />

            <TextBlock Text="Data" />
            <TextBox   Text="{Binding Param2}"  ToolTip="The value to put at that field index." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.SET_INST_DATA64">
        <!--need review-->
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Calls ScriptedInstance::SetData64 with field (Param1) and target's GUID (Param2).
            </TextBlock>
            <Separator />
            <TextBlock Text="Field" />
            <TextBox   Text="{Binding Param1}"  ToolTip="The field to change in the instance script. Again, this field needs to be a valid field that has been already defined in the instance's script." />

            <TextBlock Text="Target" />
            <controls:EnumComboBox EnumSource="{x:Type metadata:TargetType}"  SelectedEnumValue="{Binding Param2}"  ToolTip="The target type to use to get the GUID that will be stored at the field index. The value in this field needs to be a valid target type as specified in the reference tables below." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.UPDATE_TEMPLATE">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Changes a creature's template to (Param1) with team = Alliance or Horde when (Param2) is either false or true respectively.
            </TextBlock>
            <Separator />
            <TextBlock Text="TemplateId" />
            <TextBox   Text="{Binding Param1}"  ToolTip="The creature template ID. The value here must be a valid creature template ID." />

            <TextBlock Text="Team" />
            <controls:EnumComboBox SelectedEnumValue="{Binding Param2}" EnumSource="{x:Type metadata:Team}" ToolTip="Use model_id from team : Alliance(0) or Horde (1)."/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.DIE">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Kills the creature
            </TextBlock>
            <Separator />
            <TextBlock Text="No params!" HorizontalAlignment="Center" Foreground="#FFFF0000" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.ZONE_COMBAT_PULSE">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Puts all players within an instance into combat with the creature. Only works when a creature is already in combat. Doesn't work outside instances.
            </TextBlock>
            <Separator />
            <TextBlock Text="No params!" HorizontalAlignment="Center" Foreground="#FFFF0000" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.CALL_FOR_HELP">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Call any friendly out-of-combat creatures in a radius (Param1) to attack current creature's target.
            </TextBlock>
            <Separator />
            <TextBlock Text="Radius" />
            <TextBox   Text="{Binding Param1}"  ToolTip="All friendly (not only same faction) creatures will go to help" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.SET_SHEATH">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Sets sheath state for a creature (0 = no weapon, 1 = melee weapon, 2 = ranged weapon).
            </TextBlock>
            <Separator />
            <TextBlock Text="Sheath" />
            <controls:EnumComboBox SelectedEnumValue="{Binding Param1}" EnumSource="{x:Type metadata:SheathState}" ToolTip="Set Sheath State"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.FORCE_DESPAWN">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Despawns the creature, if delay = 0 immediate otherwise will despawn after delay time set in Param1 (in ms).
            </TextBlock>
            <Separator />
            <TextBlock Text="Delay" />
            <TextBox   Text="{Binding Param1}"  ToolTip="Sets delay time until Despawn occurs after triggering the action. Time is in (ms)." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.SET_INVINCIBILITY_HP_LEVEL">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Set min. health level for creature that can be set at damage as flat value or percent from max health
            </TextBlock>
            <Separator />
            <TextBlock Text="HP_Level" />
            <TextBox   Text="{Binding Param1}"  ToolTip="Sets Paramater 1 as an exact HP value" />

            <TextBlock Text="HP_Percent" />
            <TextBox   Text="{Binding Param2}"  ToolTip="Sets Paramater 1 as a HP Percent (0..100) of the creature's max health" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.MOUNT_TO_ENTRY_OR_MODEL">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Set mount model from creature_template.entry (Param1) OR explicit modelId (Param2). If (Param1) AND (Param2) are both 0, unmount.
            </TextBlock>
            <Separator />
            <TextBlock Text="CreatureEntry" />
            <TextBox   Text="{Binding Param1}"   ToolTip="Optional: Set mount model from creature_template.entry" />

            <TextBlock Text="ModelId" />
            <TextBox   Text="{Binding Param2}"  ToolTip="Optional: Set mount model by explicit modelId" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.CHANCED_TEXT">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Displays by Chance (1..100) the specified -TextId. When -TextId2 is specified, the selection will be randomized. Text types are defined, along with other options for the text, in a table below. Param2 and Param3 needs to be negative.
            </TextBlock>
            <Separator />
            <TextBlock Text="Chance" />
            <TextBox   Text="{Binding Param1}"  ToolTip="Chance with which a text will be displayed (must be between 1 and 99)" />

            <TextBlock Text="TextId 1" />
            <TextBox   Text="{Binding Param2}"  ToolTip="The entry of the text that the NPC should use from eventai_texts table. Optionally a entry from other tables can be used (such as custom_texts)." />

            <TextBlock Text="TextId 2" />
            <TextBox   Text="{Binding Param3}"  ToolTip="Optional TextId can be defined in addition. The same apply to this as explained above, however eventAI will randomize between the two." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.THROW_AI_EVENT">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Throws an AIEvent of type (Param1) to nearby friendly Npcs in range of (Param2)
            </TextBlock>
            <Separator />
            <TextBlock Text="EventType" />
            <controls:EnumComboBox SelectedEnumValue="{Binding Param1}" EnumSource="{x:Type metadata:EventType}" ToolTip="What AIEvent to throw, supported types see CreatureAI.h enum AIEventType" />

            <TextBlock Text="Radius" />
            <TextBox   Text="{Binding Param2}"  ToolTip="Throw the AIEvent to nearby friendly creatures within this range" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.SET_THROW_MASK">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Marks for which AIEvents the npc will throw AIEvents on its own.
            </TextBlock>
            <Separator />
            <TextBlock Text="EventTypeMask" />
            <controls:ComboBoxFlags SelectedFlag="{Binding Param1}" FlagsSource="{x:Type metadata:EventTypeMask}" ToolTip="Which AIEvents to throw, supported types see CreatureAI.h enum AIEventType (mask-value is 2^type)" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.SET_STAND_STATE">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Set the unit stand state (Param1) of the current creature.
            </TextBlock>
            <Separator />
            <TextBlock Text="StandState" />
            <controls:EnumComboBox EnumSource="{x:Type metadata:StandState}" SelectedEnumValue="{Binding Param1}"  ToolTip="Stand state id to be used by the creature as defined in Unit.h file in the core." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.CHANGE_MOVEMENT">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Change the unit movement type (Param1). If the movement type is Random Movement (1), the WanderDistance (Param2) must be provided.
            </TextBlock>
            <Separator />
            <TextBlock Text="Movement type" />
            <controls:EnumComboBox SelectedEnumValue="{Binding Param1}" EnumSource="{x:Type metadata:MovementType}" ToolTip="Movement type id to be used by the creature."/>

            <TextBlock Text="Wander distance" />
            <TextBox Text="{Binding Param2}" ToolTip="Wander distance to be used in case the movement type is 1 (Random)." />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ActionType.NOT_IMPLEMENTED">
        <StackPanel>
            <TextBlock Text="Param 1" />
            <TextBox   Text="{Binding Param1}" />

            <TextBlock Text="Param 2" />
            <TextBox   Text="{Binding Param2}" />

            <TextBlock Text="Param 3" />
            <TextBox   Text="{Binding Param3}" />
        </StackPanel>
    </DataTemplate>
</ResourceDictionary>