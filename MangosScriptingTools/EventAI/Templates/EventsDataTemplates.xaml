<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:dialogs="clr-namespace:EventIAConstructor.Common.Dialogs"
                    xmlns:controls="clr-namespace:EventIAConstructor.Common.Controls"
                    xmlns:local="clr-namespace:EventIAConstructor"
                    xmlns:vm="clr-namespace:EventIAConstructor.EventAI.ViewModel"
                    xmlns:metadata="clr-namespace:EventIAConstructor.EventAI.Metadata"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <vm:ConditionDataTemplateSelector x:Key="ConditionDataTemplateSelector" />

    <DataTemplate x:Key="EventType.TIMER_IN_COMBAT">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires at first between (Param1) and (Param2) and then will repeat between every (Param3) and (Param4),  EXPIRES ONLY IN COMBAT.
            </TextBlock>
            <Separator />
            <TextBlock Text="Initial min" />
            <TextBox Text="{Binding Param1, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minumum Time used to calculate Random Initial Expire" />

            <TextBlock Text="Initial max" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Time used to calculate Random Initial Expire" />

            <TextBlock Text="Repeat min" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Time used to calculate Random Repeat Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Time used to calculate Random Repeat Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.TIMER_OOC">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires at first between (Param1) and (Param2) and then will repeat between every (Param3) and (Param4),  EXPIRES ONLY OUT OF COMBAT BUT NOT DURING EVADE.
            </TextBlock>
            <Separator />
            <TextBlock Text="Initial min" />
            <TextBox Text="{Binding Param1, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Time used to calculate Random Initial Event Expire" />

            <TextBlock Text="Initial max" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Time used to calculate Random Initial Event Expire" />

            <TextBlock Text="Repeate min" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Time used to calculate Random Repeat Event Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Time used to calculate Random Repeat Event Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.HP">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires when the NPC's HP% is between (Param1) and (Param2). Will repeat between every (Param3) and (Param4) If Event Conditions Are Still Met.
            </TextBlock>
            <Separator />
            <TextBlock Text="HP max" />
            <TextBox Text="{Binding Param1, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum HP% That will trigger this Event to Expire" />

            <TextBlock Text="HP min" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum HP% That will trigger this Event to Expire" />

            <TextBlock Text="Repeat min" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Time used to calculate Random Repeat Event Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}" ToolTip="RepeatMax - Maximum Time used to calculate Random Repeat Event Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.MANA">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires when the NPC's Mana% is between (Param1) and (Param2). Will repeat between every (Param3) and (Param4) If Event Conditions Are Still Met.
            </TextBlock>
            <Separator />
            <TextBlock Text="Mana max" />
            <TextBox Text="{Binding Param1, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Mana% That will trigger this Event to Expire" />

            <TextBlock Text="Mana min" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Mana% That will trigger this Event to Expire" />

            <TextBlock Text="Repeat min" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Time used to calculate Random Repeat Event Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}"  ToolTip="Maximum Time used to calculate Random Repeat Event Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.AGGRO">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires ONLY upon the NPC's INITIAL Aggro at the Start of Combat (Does NOT Repeat) and Only Resets on Spawn or Evade.
            </TextBlock>
            <Separator />
            <TextBlock Text="No params!" HorizontalAlignment="Center" Foreground="#FFFF0000" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.KILL">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires upon Killing a Player. Will Repeat Check between (Param1) and (Param2). This Event Will Not Trigger Again Until Repeat Timer Expires
            </TextBlock>
            <Separator />
            <TextBlock Text="Repeat min" />
            <TextBox Text="{Binding Param1, UpdateSourceTrigger=PropertyChanged}"  ToolTip="Minimum Time used to calculate Random Repeat Event Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}"  ToolTip="Maximum Time used to calculate Random Repeat Event Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.DEATH">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires on the NPC's Death. (This Triggers At The Moment The NPC Dies)
            </TextBlock>
            <Separator />
            <TextBlock Text="No params!" HorizontalAlignment="Center" Foreground="#FFFF0000" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.EVADE">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires at the moment the Creature EnterEvadeMode() and Exits Combat.
            </TextBlock>
            <Separator />
            <TextBlock Text="No params!" HorizontalAlignment="Center" Foreground="#FFFF0000" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.SPELLHIT">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires upon Spell Hit of the NPC. When (param1) is set, it is the specific Spell ID used as the trigger.
                With (param2) specified, the expiration is limited to specific spell schools (-1 for all) and Spell ID value is ignored.
                Will repeat Event Conditions Check between every (Param3) and (Param4). Only A Spell ID or Spell School may be Specified but NOT both.
            </TextBlock>
            <Separator />
            <TextBlock Text="Spell Id" />
            <controls:TextBoxButton Value="{Binding Param1}" DialogType="{x:Type dialogs:SpellDialog}"
                                    ToolTip="The Spell ID that will trigger the Event to occur (NOTE: If you use Spell School as the trigger ALWAYS set this value to 0)" />

            <TextBlock Text="School mask" />
            <controls:ComboBoxFlags SelectedFlag="{Binding Param2}" FlagsSource="{x:Type metadata:SpellSchoolMask}"
                                    ToolTip="Spell School to trigger the Event (NOTE: If you use a SpellID then ALWAYS set this value to -1) - *See Below for Spell School Bitmask Values*">
            </controls:ComboBoxFlags>

            <TextBlock Text="Repeate min" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Time used to calculate Random Repeat Event Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}"  ToolTip="Maximum Time used to calculate Random Repeat Event Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.RANGE">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires when the Highest Threat Target Distance is Greater than (Param1) and Less than (Param2).
                Will repeat between every (Param3) and (Param4) if Event Conditions Are Still Met.
            </TextBlock>
            <Separator />
            <TextBlock Text="Min dist" />
            <TextBox Text="{Binding Param1, UpdateSourceTrigger=PropertyChanged}" ToolTip="This Distance is the Minimum Distance between the NPC and it's target to allow this Event to Expire" />

            <TextBlock Text="Max dist" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" ToolTip="This Distance is the Maximum Distance between the NPC and it's target to allow this Event to Expire" />

            <TextBlock Text="Repeate min" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Time used to calculate Random Repeat Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Time used to calculate Random Repeat Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.OOC_LOS">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires when a unit moves within distance (MaxAllowedRange) of the NPC.
                If (Param1) is 0 it will expire only when unit is hostile, If (Param1) is 1 it will expire only when unit is friendly.
                This depends generally on faction relations. Will repeat every (Param3) and (Param4).
                Does NOT expire when the NPC is in combat.
            </TextBlock>
            <Separator />
            <TextBlock Text="Hostile or not" />
            <controls:EnumComboBox SelectedEnumValue="{Binding Param1}" EnumSource="{x:Type metadata:HostileOrNot}" ToolTip="This will expire if Unit are hostile. If Param1=1 it will only expire if Unit are not Hostile(generally determined by faction)"/>

            <TextBlock Text="Max allowed range" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" ToolTip="Expires when a Unit moves within this distance to creature" />

            <TextBlock Text="Repeate min" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Time used to calculate Random Repeat Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Time used to calculate Random Repeat Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.SPAWNED">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires on initial spawn and respawn of the NPC (Useful for setting Ranged Movement/Summoning Pets/Applying Buffs).
            </TextBlock>
            <Separator />
            <TextBlock Text="Param 1" />
            <TextBox Text="{Binding Param1, UpdateSourceTrigger=PropertyChanged}" ToolTip="0: works always, 1: works on map in Parameter 2, 2: works on zone/subzone in Parameter 2" />

            <TextBlock Text="Param 2" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" ToolTip="depends on Parameter 1: for 1 it is map ID, for 2 it is area ID to check" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.TARGET_HP">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires when current target's HP% is between (Param1) and (Param2).
                Will repeat every (Param3) and (Param4)If Event Conditions Are Still Met.
            </TextBlock>
            <Separator />
            <TextBlock Text="HP max" />
            <TextBox Text="{Binding Param1, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum HP% That this Event will Expire" />

            <TextBlock Text="HP min" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum HP% That this Event will Expire" />

            <TextBlock Text="Repeate min" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Time used to calculate Random Repeat Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Time used to calculate Random Repeat Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.TARGET_CASTING">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires when the current target is casting a spell. Will repeat every (Param1) and (Param2) If Event Conditions Are Still Met.
            </TextBlock>
            <Separator />
            <TextBlock Text="Repeate min" />
            <TextBox Text="{Binding Param1, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Time used to calculate Random Repeat Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Time used to calculate Random Repeat Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.FRIENDLY_HP">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires when a friendly unit in (Radius) has at least (Param1) HP points missing.
                Will repeat every (Param3) and (Param4) If Event Conditions Are Still Met.
            </TextBlock>
            <Separator />
            <TextBlock Text="HP deficit" />
            <TextBox Text="{Binding Param1, UpdateSourceTrigger=PropertyChanged}" ToolTip="This is the Amount of HP Missing from Full HP to trigger this event (You would need to calculate the amount of HP the event happens and subtract that from Full HP Value to get this number)" />

            <TextBlock Text="Radius" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" ToolTip="This is the Range in Yards the NPC will scan for nearby Friendlies (Faction is Friendly To) for the missing amount of HP in Param1." />

            <TextBlock Text="Repeate min" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Time used to calculate Random Repeat Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Time used to calculate Random Repeat Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.FRIENDLY_IS_CC">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires when a friendly unit is crowd controlled within the given Radius (Param2). Will repeat every (Param3) and (Param4).
            </TextBlock>
            <Separator />
            <TextBlock Text="Dispell type" />
            <controls:EnumComboBox SelectedEnumValue="{Binding Param1}" EnumSource="{x:Type metadata:DispelType}" ToolTip="Dispel Type to trigger the event - *See Below for Dispel Bitmask Values*" />

            <TextBlock Text="Radius" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" ToolTip="This is the Range in Yards the NPC will scan for nearby Friendlies being Crowd Controlled" />

            <TextBlock Text="Repeate min" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Time used to calculate Random Repeat Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Time used to calculate Random Repeat Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.FRIENDLY_MISSING_BUFF">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires when a friendly unit is missing aura(s) given by a spell (Param1) within Radius (Param2).
                Will repeat every (Param3) and (Param4) If Event Conditions Are Still Met.
            </TextBlock>
            <Separator />
            <TextBlock Text="Spell Id" />
            <controls:TextBoxButton Value="{Binding Param1}" DialogType="{x:Type dialogs:SpellDialog}"  ToolTip="This is the SpellID That the Aura Check will look for (If it is missing this Aura)" />

            <TextBlock Text="Radius" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" ToolTip="This is the Range in Yards the NPC will scan for nearby Friendlies (Faction is Friendly To) for the missing Aura." />

            <TextBlock Text="Repeate min" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Time used to calculate Random Repeat Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Time used to calculate Random Repeat Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.SUMMONED_UNIT">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires after creature with entry = (Param1) is spawned (Param1 = 0 means all spawns). Will repeat every (Param2) and (Param3).
            </TextBlock>
            <Separator />
            <TextBlock Text="Creature Id" />
            <controls:TextBoxButton Value="{Binding Param1}" DialogType="{x:Type dialogs:CreatureDialog}" ToolTip="The CreatureID that the NPC is watching to spawn to trigger this event" />

            <TextBlock Text="Repeate min" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}"  ToolTip="Minimum Time used to calculate Random Repeat Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Time used to calculate Random Repeat Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.TARGET_MANA">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires when current target's Mana% is between (Param1) and (Param2). Will repeat every (Param3) and (Param4) If Event Conditions Are Still Met.
            </TextBlock>
            <Separator />
            <TextBlock Text="Mana max" />
            <TextBox Text="{Binding Param1, UpdateSourceTrigger=PropertyChanged}" ToolTip="" />

            <TextBlock Text="Mana min" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" ToolTip="" />

            <TextBlock Text="Repeate min" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}" ToolTip="" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.REACHED_HOME">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires when a creature reaches it's home (spawn) location after evade. This is commonly used for NPC's who Stealth once reaching their Spawn Location
            </TextBlock>
            <Separator />
            <TextBlock Text="No params!" HorizontalAlignment="Center" Foreground="#FFFF0000" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.RECEIVE_EMOTE">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires when a creature receives an emote with emote text id ("enum TextEmotes" from SharedDefines.h in Mangos Source) in (Param1).
                Conditions can be defined (Param2) with optional values (Param3,Param4), see (enum ConditionType) in ObjectMgr.h (Mangos Source).
            </TextBlock>
            <Separator />
            <TextBlock Text="Emote Id" />
            <controls:EnumComboBox SelectedEnumValue="{Binding Param1}" EnumSource="{x:Type metadata:TextEmotes}" ToolTip="Valid text emote ID from Mangos source (SharedDefines.h - enum TextEmotes)" />

            <TextBlock Text="Condition" />
            <controls:EnumComboBox EnumSource="{x:Type metadata:ConditionType}" SelectedEnumValue="{Binding Param2}"  ToolTip="Conditions based on MaNGOS/src/game/ObjectMgr.h - enum ConditionType" />
            <!--Шаблоны находятся в .\ViewModel\Dictionary\ConditionDataTemplate.xaml-->
            <ContentPresenter Content="{Binding Self}"
                                      ContentTemplateSelector="{StaticResource ConditionDataTemplateSelector}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.AURA">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires when a creature has spell (Param1) auras applied in a stack greater or equal to value provided in (Param2).
                Will repeat every (Param3) and (Param4) If Event Conditions Are Still Met.
            </TextBlock>
            <Separator />
            <TextBlock Text="Spell Id" />
            <controls:TextBoxButton Value="{Binding Param1}" DialogType="{x:Type dialogs:SpellDialog}"  ToolTip="This is the SpellID That the Aura Check will look for" />

            <TextBlock Text="Ammount in stack" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}"  ToolTip="This is the amount of SpellID's auras at creature required for event expire." />

            <TextBlock Text="Repeate min" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}"  ToolTip="Minimum Time used to calculate Random Repeat Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}"  ToolTip="Maximum Time used to calculate Random Repeat Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.TARGET_BUFFED">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires when a target unit has spell (Param1) auras applied in a stack greater or equal to value provided in (Param2).
                Will repeat every (Param3) and (Param4) If Event Conditions Are Still Met.
            </TextBlock>
            <Separator />
            <TextBlock Text="Spell Id" />
            <controls:TextBoxButton Value="{Binding Param1}" DialogType="{x:Type dialogs:SpellDialog}" ToolTip="This is the SpellID That the Aura Check will look for" />

            <TextBlock Text="Ammount in stack" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}"  ToolTip="This is the amount of SpellID's auras at target unit required for event expire." />

            <TextBlock Text="Repeate min" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}"  ToolTip="Minimum Time used to calculate Random Repeat Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}"  ToolTip="Maximum Time used to calculate Random Repeat Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.SUMMONED_JUST_DIED">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires after creature with entry = (Param1) is die (Param1 = 0 means all spawns). Will repeat every (Param2) and (Param3).
            </TextBlock>
            <Separator />
            <TextBlock Text="Creature Id" />
            <controls:TextBoxButton Value="{Binding Param1}" DialogType="{x:Type dialogs:CreatureDialog}" ToolTip="The CreatureID that the NPC is watching die to trigger this event" />

            <TextBlock Text="Repeate min" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Time used to calculate Random Repeat Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Time used to calculate Random Repeat Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.SUMMONED_JUST_DESPAWN">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires before creature with entry = (Param1) is despawn (Param1 = 0 means all spawns). Will repeat every (Param2) and (Param3).
            </TextBlock>
            <Separator />
            <TextBlock Text="Creature Id" />
            <controls:TextBoxButton Value="{Binding Param1}" DialogType="{x:Type dialogs:CreatureDialog}" ToolTip="The CreatureID that the NPC is watching despawn to trigger this event" />

            <TextBlock Text="Repeate min" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}"  ToolTip="Minimum Time used to calculate Random Repeat Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Time used to calculate Random Repeat Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.MISSING_AURA">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires when a creature not has spell (Param1) auras applied in a stack greater or equal to value provided in (Param2).
                Will repeat every (Param3) and (Param4).
            </TextBlock>
            <Separator />
            <TextBlock Text="Spell Id" />
            <controls:TextBoxButton Value="{Binding Param1}" DialogType="{x:Type dialogs:SpellDialog}" ToolTip="" />

            <TextBlock Text="Ammount in stack" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" ToolTip="" />

            <TextBlock Text="Repeate min" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}" ToolTip="" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.TARGET_MISSING_AURA">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires when a target unit not has spell (Param1) auras applied in a stack greater or equal to value provided in (Param2). Will repeat every (Param3) and (Param4).
            </TextBlock>
            <Separator />
            <TextBlock Text="Spell Id" />
            <controls:TextBoxButton Value="{Binding Param1}" DialogType="{x:Type dialogs:SpellDialog}" ToolTip="This is the SpellID That the Aura Check will look for to be missing" />

            <TextBlock Text="Ammount in stack" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" ToolTip="This is the amount or less of SpellID's auras at creature required for event expire." />

            <TextBlock Text="Repeate min" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Time used to calculate Random Repeat Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Time used to calculate Random Repeat Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.TIMER_GENERIC">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires at first between (Param1) and (Param2) and then will repeat between every (Param3) and (Param4).
            </TextBlock>
            <Separator />
            <TextBlock Text="Initial min" />
            <TextBox Text="{Binding Param1, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minumum Time used to calculate Random Initial Expire" />

            <TextBlock Text="Initial max" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}"  ToolTip="Maximum Time used to calculate Random Initial Expire" />

            <TextBlock Text="Repeate min" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Time used to calculate Random Repeat Expire" />

            <TextBlock Text="Repeate max" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Time used to calculate Random Repeat Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.RECEIVE_AI_EVENT">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires when the creature receives an AIEvent of type (Param1), sent by creature (Param2 != 0).
                If (Param2 = 0) then sent by any creature
            </TextBlock>
            <Separator />
            <TextBlock Text="AI Event type" />
            <controls:EnumComboBox SelectedEnumValue="{Binding Param1}" EnumSource="{x:Type metadata:EventType}" ToolTip="Only expire when an AIEvent of this type is received. Supported types see CreatureAI.h enum AIEventType" />

            <TextBlock Text="Sender entry" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" ToolTip="If != 0 then only expire when the AIEvent is received from a creature of this entry" />
            <controls:TextBoxButton Value="{Binding Param2}" DialogType="{x:Type dialogs:CreatureDialog}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.ENERGY">
        <StackPanel>
            <TextBlock TextWrapping="Wrap" FontSize="12" Height="80">
                Expires once Energy% is between (Param1) and (Param2). Will repeat every (Param3) and (Param4).
                This is commonly used for events where an NPC low on Energy will do something (Such as stop casting spells and switch to melee).
            </TextBlock>
            <Separator />
            <TextBlock Text="EnergyMax%" />
            <TextBox Text="{Binding Param1, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Energy% That will trigger this Event to Expire" />

            <TextBlock Text="EnergyMin%" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Energy% That will trigger this Event to Expire" />

            <TextBlock Text="RepeatMin" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" ToolTip="Minimum Time used to calculate Random Repeat Event Expire" />

            <TextBlock Text="RepeatMax" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}" ToolTip="Maximum Time used to calculate Random Repeat Event Expire" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EventType.NOT_IMPLEMENTED">
        <StackPanel>
            <TextBlock Text="Param1" />
            <TextBox Text="{Binding Param1, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock Text="Param2" />
            <TextBox Text="{Binding Param2, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock Text="Param3" />
            <TextBox Text="{Binding Param3, UpdateSourceTrigger=PropertyChanged}" />

            <TextBlock Text="Param4" />
            <TextBox Text="{Binding Param4, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
    </DataTemplate>
</ResourceDictionary>